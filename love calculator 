<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Umar & Sara - Love Calculator ❤️</title>
  <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #ffcce6, #fad0f4, #e6c6ff);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
      overflow-x: hidden;
      position: relative;
    }
    
    .background-hearts {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }
    
    .heart {
      position: absolute;
      font-size: 24px;
      color: rgba(255, 105, 180, 0.4);
      animation: float 6s ease-in-out infinite;
      opacity: 0;
    }
    
    .container {
      max-width: 800px;
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 30px;
    }
    
    .header {
      text-align: center;
      padding: 20px;
      width: 100%;
    }
    
    .couple-title {
      font-family: 'Dancing Script', cursive;
      font-size: 3.5rem;
      color: #ff1493;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
      margin-bottom: 10px;
    }
    
    .subtitle {
      color: #ff69b4;
      font-size: 1.2rem;
      font-weight: 500;
    }
    
    .card {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 20px;
      box-shadow: 0 15px 35px rgba(255, 105, 180, 0.3);
      padding: 30px;
      width: 100%;
      max-width: 500px;
      position: relative;
      overflow: hidden;
      transition: transform 0.5s ease;
    }
    
    .card:hover {
      transform: translateY(-10px);
    }
    
    .card::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
      transform: rotate(30deg);
      animation: sparkle 8s linear infinite;
      z-index: 0;
    }
    
    .calculator-content {
      position: relative;
      z-index: 2;
    }
    
    .calculator-title {
      color: #ff1493;
      text-align: center;
      margin-bottom: 25px;
      font-size: 1.8rem;
      text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }
    
    .input-group {
      margin-bottom: 20px;
      position: relative;
    }
    
    .input-group label {
      display: block;
      margin-bottom: 8px;
      color: #ff69b4;
      font-weight: 500;
    }
    
    .input-group input {
      width: 100%;
      padding: 15px;
      border: 2px solid #ffb6e1;
      border-radius: 15px;
      font-size: 16px;
      outline: none;
      transition: all 0.3s;
      background: rgba(255, 255, 255, 0.8);
    }
    
    .input-group input:focus {
      border-color: #ff69b4;
      box-shadow: 0 0 15px rgba(255, 105, 180, 0.4);
      transform: scale(1.02);
    }
    
    .calculate-btn {
      width: 100%;
      background: linear-gradient(to right, #ff69b4, #ff1493);
      color: white;
      border: none;
      padding: 16px;
      margin: 20px 0;
      border-radius: 15px;
      font-size: 18px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 5px 15px rgba(255, 105, 180, 0.4);
      position: relative;
      overflow: hidden;
    }
    
    .calculate-btn:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 25px rgba(255, 105, 180, 0.6);
    }
    
    .calculate-btn:active {
      transform: translateY(2px);
    }
    
    .calculate-btn::after {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: rgba(255, 255, 255, 0.2);
      transform: rotate(30deg);
      transition: all 0.5s;
    }
    
    .calculate-btn:hover::after {
      transform: rotate(30deg) translate(50px, 50px);
    }
    
    #result {
      text-align: center;
      font-size: 28px;
      font-weight: bold;
      color: #ff1493;
      min-height: 50px;
      margin-top: 20px;
      padding: 20px;
      border-radius: 15px;
      background: rgba(255, 182, 193, 0.2);
      display: flex;
      justify-content: center;
      align-items: center;
      transition: all 0.5s;
    }
    
    .message-box {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 20px;
      padding: 30px;
      width: 100%;
      max-width: 500px;
      text-align: center;
      box-shadow: 0 15px 35px rgba(255, 105, 180, 0.3);
      margin-top: 20px;
    }
    
    .message-box h3 {
      color: #ff1493;
      margin-bottom: 20px;
      font-size: 1.5rem;
    }
    
    .message-box p {
      color: #e91e63;
      font-size: 1.1rem;
      line-height: 1.6;
      font-style: italic;
    }
    
    .heart-icon {
      color: #ff1493;
      margin: 0 5px;
      animation: pulse 1.5s infinite;
    }
    
    .special-message {
      background: linear-gradient(135deg, #ff69b4, #ff1493);
      color: white;
      padding: 15px;
      border-radius: 15px;
      margin-top: 20px;
      font-weight: 500;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    @keyframes sparkle {
      0% { transform: rotate(30deg) translate(0, 0); }
      100% { transform: rotate(30deg) translate(-50px, -50px); }
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.2); }
      100% { transform: scale(1); }
    }
    
    @keyframes float {
      0% {
        transform: translateY(0) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      90% {
        opacity: 1;
      }
      100% {
        transform: translateY(-100px) rotate(360deg);
        opacity: 0;
      }
    }
    
    .heart-beat {
      animation: heartbeat 1.5s ease-in-out infinite;
    }
    
    @keyframes heartbeat {
      0% { transform: scale(1); }
      25% { transform: scale(1.1); }
      50% { transform: scale(1); }
      75% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }
    
    .floating-hearts {
      animation: pulse 2s infinite alternate;
    }
    
    footer {
      margin-top: 30px;
      text-align: center;
      color: #ff69b4;
      font-size: 0.9rem;
    }
    
    /* Responsive design */
    @media (max-width: 600px) {
      .couple-title {
        font-size: 2.5rem;
      }
      
      .card {
        padding: 20px;
      }
      
      .calculator-title {
        font-size: 1.5rem;
      }
      
      #result {
        font-size: 24px;
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <div class="background-hearts" id="hearts-container"></div>
  
  <div class="container">
    <div class="header">
      <h1 class="couple-title">Umar <i class="fas fa-heart heart-icon"></i> Sara</h1>
      <p class="subtitle">Discover your love compatibility score</p>
    </div>
    
    <div class="card">
      <div class="calculator-content">
        <h2 class="calculator-title">Magic Love Calculator</h2>
        
        <div class="input-group">
          <label for="name1"><i class="fas fa-user"></i> Your Name</label>
          <input type="text" id="name1" placeholder="Enter your name" value="Umar">
        </div>
        
        <div class="input-group">
          <label for="name2"><i class="fas fa-heart"></i> Your Partner's Name</label>
          <input type="text" id="name2" placeholder="Enter your partner's name" value="Sara">
        </div>
        
        <button class="calculate-btn" id="calculate-btn">
          Calculate Our Love Match <i class="fas fa-heart"></i>
        </button>
        
        <div id="result">
          Click the button to see your love score!
        </div>
      </div>
    </div>
    
    <div class="message-box">
      <h3>For Umar & Sara</h3>
      <p>"The best thing to hold onto in life is each other."</p>
      <p>May your love continue to grow stronger every day!</p>
      
      <div class="special-message">
        <i class="fas fa-heart"></i> True love is when you put someone on a pedestal, 
        and they fall - but you are there to catch them. <i class="fas fa-heart"></i>
      </div>
    </div>
    
    <footer>
      <p>Made with <i class="fas fa-heart" style="color:#ff1493"></i> for Umar & Sara</p>
    </footer>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const calculateBtn = document.getElementById('calculate-btn');
      const name1Input = document.getElementById('name1');
      const name2Input = document.getElementById('name2');
      const result = document.getElementById('result');
      const heartsContainer = document.getElementById('hearts-container');
      
      // Create floating hearts in background
      function createHeart() {
        const heart = document.createElement('div');
        heart.innerHTML = '❤️';
        heart.classList.add('heart');
        heart.style.left = Math.random() * 100 + 'vw';
        heart.style.top = '100vh';
        heart.style.fontSize = (Math.random() * 20 + 10) + 'px';
        heart.style.animationDuration = (Math.random() * 6 + 4) + 's';
        heart.style.animationDelay = Math.random() * 2 + 's';
        heartsContainer.appendChild(heart);
        
        // Remove heart after animation completes
        setTimeout(() => {
          heart.remove();
        }, 10000);
      }
      
      // Create initial hearts
      for (let i = 0; i < 20; i++) {
        setTimeout(createHeart, i * 300);
      }
      
      // Keep creating hearts periodically
      setInterval(createHeart, 500);
      
      // Calculate love score
      calculateBtn.addEventListener('click', function() {
        const name1 = name1Input.value.trim();
        const name2 = name2Input.value.trim();
        
        if (name1 && name2) {
          // Special case for Umar and Sara
          if ((name1.toLowerCase() === "umar" && name2.toLowerCase() === "sara") ||
              (name1.toLowerCase() === "sara" && name2.toLowerCase() === "umar")) {
            // Create explosion of hearts
            for (let i = 0; i < 30; i++) {
              setTimeout(() => {
                createHeart();
              }, i * 100);
            }
            
            // Special message for Umar & Sara
            result.innerHTML = "99% Match! <i class='fas fa-heart'></i><br>" +
                               "<div style='font-size: 18px; margin-top: 10px;'>" +
                               "Umar & Sara - A perfect match!<br>" +
                               "Your love is truly special and meant to last forever!</div>";
            result.classList.add('heart-beat');
            return;
          }
          
          // Calculate love percentage (fun algorithm)
          const combinedNames = (name1 + name2).toLowerCase();
          let loveScore = 0;
          
          // Count vowels and special letters
          const loveLetters = ['l', 'o', 'v', 'e', 'a', 'r', 't', 'u', 's'];
          for (let letter of combinedNames) {
            if (loveLetters.includes(letter)) {
              loveScore += 10;
            }
          }
          
          // Add name length factors
          loveScore += (name1.length * name2.length * 7) % 50;
          
          // Ensure score is between 10% and 99%
          loveScore = Math.max(10, Math.min(99, loveScore));
          
          // Create romantic message
          let message = `${loveScore}% Match! <i class='fas fa-heart'></i>`;
          let description = "";
          
          if (loveScore > 90) {
            description = "Perfect match! Soulmates! 💘";
          } else if (loveScore > 70) {
            description = "Great compatibility! 💕";
          } else if (loveScore > 50) {
            description = "Good potential! 💖";
          } else {
            description = "Maybe friends for now? 💔";
          }
          
          result.innerHTML = message + "<br><div style='font-size: 18px; margin-top: 10px;'>" + description + "</div>";
          result.classList.add('heart-beat');
          
          // Create explosion of hearts
          for (let i = 0; i < 20; i++) {
            setTimeout(() => {
              createHeart();
            }, i * 100);
          }
        } else {
          result.textContent = 'Please enter both names!';
          result.classList.remove('heart-beat');
        }
      });
      
      // Auto-calculate for Umar & Sara on page load
      setTimeout(() => {
        calculateBtn.click();
      }, 2000);
    });
  </script>
</body>
</html>